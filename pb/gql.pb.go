// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: gql.proto

package gql

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	descriptor "github.com/gogo/protobuf/protoc-gen-gogo/descriptor"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Type int32

const (
	Type_DEFAULT  Type = 0
	Type_MUTATION Type = 1
	Type_QUERY    Type = 2
)

var Type_name = map[int32]string{
	0: "DEFAULT",
	1: "MUTATION",
	2: "QUERY",
}

var Type_value = map[string]int32{
	"DEFAULT":  0,
	"MUTATION": 1,
	"QUERY":    2,
}

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return proto.EnumName(Type_name, int32(x))
}

func (x *Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Type_value, data, "Type")
	if err != nil {
		return err
	}
	*x = Type(value)
	return nil
}

func (Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f41526d4337e9701, []int{0}
}

type Field struct {
	Required             *bool    `protobuf:"varint,1,opt,name=required" json:"required,omitempty"`
	Params               *string  `protobuf:"bytes,2,opt,name=params" json:"params,omitempty"`
	Dirs                 *string  `protobuf:"bytes,3,opt,name=dirs" json:"dirs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Field) Reset()         { *m = Field{} }
func (m *Field) String() string { return proto.CompactTextString(m) }
func (*Field) ProtoMessage()    {}
func (*Field) Descriptor() ([]byte, []int) {
	return fileDescriptor_f41526d4337e9701, []int{0}
}
func (m *Field) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Field.Unmarshal(m, b)
}
func (m *Field) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Field.Marshal(b, m, deterministic)
}
func (m *Field) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Field.Merge(m, src)
}
func (m *Field) XXX_Size() int {
	return xxx_messageInfo_Field.Size(m)
}
func (m *Field) XXX_DiscardUnknown() {
	xxx_messageInfo_Field.DiscardUnknown(m)
}

var xxx_messageInfo_Field proto.InternalMessageInfo

func (m *Field) GetRequired() bool {
	if m != nil && m.Required != nil {
		return *m.Required
	}
	return false
}

func (m *Field) GetParams() string {
	if m != nil && m.Params != nil {
		return *m.Params
	}
	return ""
}

func (m *Field) GetDirs() string {
	if m != nil && m.Dirs != nil {
		return *m.Dirs
	}
	return ""
}

var E_RpcType = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MethodOptions)(nil),
	ExtensionType: (*Type)(nil),
	Field:         65030,
	Name:          "gql.rpc_type",
	Tag:           "varint,65030,opt,name=rpc_type,enum=gql.Type",
	Filename:      "gql.proto",
}

var E_SvcType = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.ServiceOptions)(nil),
	ExtensionType: (*Type)(nil),
	Field:         65030,
	Name:          "gql.svc_type",
	Tag:           "varint,65030,opt,name=svc_type,enum=gql.Type",
	Filename:      "gql.proto",
}

var E_Field = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*Field)(nil),
	Field:         65030,
	Name:          "gql.field",
	Tag:           "bytes,65030,opt,name=field",
	Filename:      "gql.proto",
}

func init() {
	proto.RegisterEnum("gql.Type", Type_name, Type_value)
	proto.RegisterType((*Field)(nil), "gql.Field")
	proto.RegisterExtension(E_RpcType)
	proto.RegisterExtension(E_SvcType)
	proto.RegisterExtension(E_Field)
}

func init() { proto.RegisterFile("gql.proto", fileDescriptor_f41526d4337e9701) }

var fileDescriptor_f41526d4337e9701 = []byte{
	// 310 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x4d, 0xff, 0xd8, 0x64, 0x2a, 0x52, 0xf6, 0x20, 0xa1, 0xa0, 0x16, 0x2f, 0x56, 0xb1,
	0x09, 0xf4, 0x58, 0x4f, 0x15, 0x5b, 0x11, 0xac, 0xc5, 0x98, 0x1e, 0xf4, 0x22, 0x6d, 0xb2, 0xdd,
	0x2e, 0x6c, 0xdd, 0xcd, 0xec, 0xa6, 0xe0, 0x17, 0xf0, 0x53, 0x7b, 0x90, 0x6c, 0xaa, 0x20, 0x05,
	0x6f, 0x33, 0xb3, 0x3b, 0xbf, 0xf7, 0xe6, 0x81, 0xc7, 0x32, 0x11, 0x28, 0x94, 0x46, 0x92, 0x2a,
	0xcb, 0x44, 0xbb, 0xc3, 0xa4, 0x64, 0x82, 0x86, 0x76, 0xb4, 0xc8, 0x97, 0x61, 0x4a, 0x75, 0x82,
	0x5c, 0x19, 0x89, 0xe5, 0xb7, 0xb3, 0x29, 0xd4, 0xc7, 0x9c, 0x8a, 0x94, 0xb4, 0xc1, 0x45, 0x9a,
	0xe5, 0x1c, 0x69, 0xea, 0x3b, 0x1d, 0xa7, 0xeb, 0x46, 0xbf, 0x3d, 0x39, 0x82, 0x7d, 0x35, 0xc7,
	0xf9, 0x5a, 0xfb, 0x95, 0x8e, 0xd3, 0xf5, 0xa2, 0x6d, 0x47, 0x08, 0xd4, 0x52, 0x8e, 0xda, 0xaf,
	0xda, 0xa9, 0xad, 0x2f, 0xaf, 0xa0, 0x16, 0x7f, 0x28, 0x4a, 0x9a, 0xd0, 0xb8, 0x1d, 0x8d, 0x87,
	0xb3, 0x87, 0xb8, 0xb5, 0x47, 0x0e, 0xc0, 0x9d, 0xcc, 0xe2, 0x61, 0x7c, 0x3f, 0x7d, 0x6c, 0x39,
	0xc4, 0x83, 0xfa, 0xd3, 0x6c, 0x14, 0xbd, 0xb4, 0x2a, 0x83, 0x31, 0xb8, 0xa8, 0x92, 0x37, 0x53,
	0x6c, 0x9c, 0x04, 0xa5, 0xdb, 0xe0, 0xc7, 0x6d, 0x30, 0xa1, 0x66, 0x25, 0xd3, 0xa9, 0x32, 0x5c,
	0xbe, 0x6b, 0xff, 0xf3, 0xab, 0xd0, 0x39, 0xec, 0x7b, 0x41, 0x71, 0x65, 0x21, 0x12, 0x35, 0x50,
	0x25, 0x45, 0x31, 0xb8, 0x03, 0x57, 0x6f, 0xb6, 0x9c, 0xd3, 0x1d, 0xce, 0x33, 0xc5, 0x0d, 0x4f,
	0xe8, 0x7f, 0x20, 0xbd, 0x29, 0x41, 0x43, 0xa8, 0x2f, 0x6d, 0x1e, 0xc7, 0x3b, 0x14, 0x9b, 0xd3,
	0x5f, 0x46, 0xb3, 0x0f, 0x96, 0x61, 0x9f, 0xa2, 0x72, 0xf3, 0xe6, 0xe2, 0xf5, 0x9c, 0x71, 0xb3,
	0xca, 0x17, 0x41, 0x22, 0xd7, 0x61, 0xa2, 0x57, 0x73, 0x54, 0x98, 0x87, 0x4c, 0xf6, 0x2c, 0xaa,
	0xc7, 0x32, 0x11, 0xaa, 0xc5, 0x35, 0xcb, 0xc4, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x04, 0x65,
	0x27, 0x71, 0xb0, 0x01, 0x00, 0x00,
}
